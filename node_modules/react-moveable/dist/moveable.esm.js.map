{"version":3,"file":"moveable.esm.js","sources":["../src/react-moveable/ables/AbleManager.ts","../src/react-moveable/consts.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/renderDirections.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/ables/snappable/utils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/snappable/render.tsx","../src/react-moveable/ables/snappable/snapBounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/utils.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!state.gesto) {\n                state.gesto = datas.childGestos[i];\n            }\n            if (!state.gesto) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { prefix, getControlTransform, getLineStyle } from \"./utils\";\nimport { Renderer, MoveableManagerInterface, RenderDirections } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject, throttle, getRad } from \"@daybrush/utils\";\n\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    React: Renderer,\n    additionalClassName: string = \"\",\n): any[] {\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n        zoom,\n    } = moveable.props;\n\n    const directionMap: IObject<boolean> = {};\n\n    if (!directions) {\n        return [];\n    }\n    const sign = (direction > 0 ? 1 : -1);\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n    const degRotation = rotationRad / Math.PI * 180;\n\n    renderDirections.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return renderDirections.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, additionalClassName)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string,\n    pos1: number[], pos2: number[],\n    zoom: number,\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets, catchEvent,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnDragStart,\n    OnBeforeRotateGroup,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderDirectionControls } from \"../renderDirections\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    isSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    let nextDist = dist;\n\n    const prevSnapDeg = datas.prevSnapDeg;\n\n\n\n    if (isSnap) {\n        nextDist = checkSnapRotate(moveable, moveableRect, datas.origin, nextDist);\n    }\n\n    const snapRotation = throttle(startValue + nextDist, throttleRotate);\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, nextDist, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    if (rotationPosition === \"none\") {\n        return;\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (hasClass(target, prefix(\"rotation-control\"))) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onBeforeRotate: \"beforeRotate\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onBeforeRotateGroup: \"beforeRotateGroup\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [\n        `.rotation {\n            position: absolute;\n            height: 40px;\n            width: 1px;\n            transform-origin: 50% 100%;\n            height: calc(40px * var(--zoom));\n            top: auto;\n            left: 0;\n            bottom: 100%;\n            will-change: transform;\n        }\n        .rotation .rotation-line {\n            display: block;\n            width: 100%;\n            height: 100%;\n            transform-origin: 50% 50%;\n        }\n        .rotation .rotation-control {\n            border-color: #4af;\n            border-color: var(--moveable-color);\n            background:#fff;\n            cursor: alias;\n        }`,\n    ],\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n        } = moveable.props;\n        const {\n            renderPoses,\n            direction,\n        } = moveable.state;\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        const jsxs = [];\n\n        if (positions) {\n            const [pos, rad] = positions;\n            jsxs.push(\n                <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        }\n        if (renderDirections) {\n            jsxs.push(...renderDirectionControls(moveable, [], React));\n        }\n\n\n        return jsxs;\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(clientX, clientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(clientX, clientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(clientX, clientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            // setValue(pos: number) {\n            //     datas.requestValue = pos;\n            // },\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const requestValue = e.datas.requestValue;\n\n        if (requestValue != null) {\n            // return this.dragControl(moveable, {...e, parentDist: });\n        }\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { SnapElementRect } from \"src/react-moveable\";\nimport {\n    ElementGuidelineValue, MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnapGuideline, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculateInversePosition, calculatePosition,\n    getAbsolutePosesByState, getRect, getRefTarget,\n    roundSign,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getDefaultGuidelines(\n    horizontalGuidelines: number[] | false,\n    verticalGuidelines: number[] | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        guidelines.push({\n            type: \"horizontal\", pos: [\n                snapOffsetLeft,\n                throttle(pos - clientTop + snapOffsetTop, 0.1),\n            ], size: snapWidth,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        guidelines.push({\n            type: \"vertical\", pos: [\n                throttle(pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ], size: snapHeight,\n        });\n    });\n    return guidelines;\n}\n\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return el;\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        snapOffset,\n        containerClientRect: {\n            overflow,\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n    } = moveable.props;\n    const elementGuidelines = getElementGuidelines(moveable);\n    const totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n\n        totalGuidelines.push(...getGapGuidelines(\n            moveable,\n            { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 },\n            snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    return totalGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n) {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\")] : [],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n) {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number) => v,\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n) {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects, className }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    directionCondition,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    getTotalGuidelines,\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    const container = moveable.state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n            snapOffset.left = throttle(offset1[0], 0.1);\n            snapOffset.top = throttle(offset1[1], 0.1);\n            snapOffset.right = throttle(offset2[0], 0.1);\n            snapOffset.bottom = throttle(offset2[1], 0.1);\n        }\n    }\n\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const { pos1, pos2, pos3, pos4 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection } = datas;\n    const { allMatrix, is3d } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects);\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: v => v,\n * });\n * moveable.snapDistFormat = v => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams, getComputedStyle,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, average, findIndex } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        nextIndex = nextTransforms.length;\n        datas.transformIndex = nextIndex;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(nextPoses.map(pos => pos[0])),\n        average(nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\n\nexport function getNextTransformText(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms.join(\" \");\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM, IS_WEBKIT } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getDragDist } from \"./gesto/GestoUtils\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n    computedStyle = getComputedStyle(target),\n) {\n    const computedTransform = computedStyle.transform;\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedStyle.transform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement, style);\n        position = style.position!;\n\n        if (tagName === \"svg\" || position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    style: CSSStyleDeclaration,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    let requestEnd = !checkContainer && target === container || target === document.body;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const transform = getElementTransform(el, style);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        const isFixed = position === \"fixed\";\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, style);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        } else if (tagName === \"g\" && target !== el) {\n            offsetLeft = 0;\n            offsetTop = 0;\n        }\n\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container);\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n        }\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === document.body) {\n                const margin = getBodyOffset(el, false, style);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n        if (hasOffset) {\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - el.scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - el.scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === document.body) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n) {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    if (target) {\n        const {\n            offsetWidth,\n            offsetHeight,\n        } = getSize(target);\n\n        width = offsetWidth;\n        height = offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasFixed,\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox || el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function calculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\n\ninterface ElementSizes {\n    svg: boolean;\n    offsetWidth: number;\n    offsetHeight: number;\n    clientWidth: number;\n    clientHeight: number;\n    cssWidth: number;\n    cssHeight: number;\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = getComputedStyle(target),\n): ElementSizes {\n    const hasOffset = !isUndefined((target as any).offsetWidth);\n\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n\n        const offsetWidth = bbox.width;\n        const offsetHeight = bbox.height;\n\n        return {\n            svg: true,\n            offsetWidth,\n            offsetHeight,\n            clientWidth: offsetWidth,\n            clientHeight: offsetHeight,\n            cssWidth: offsetWidth,\n            cssHeight: offsetHeight,\n        };\n    } else {\n        const boxSizing = style.boxSizing === \"border-box\";\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        let cssWidth = parseFloat(style.width);\n        let cssHeight = parseFloat(style.height);\n        let offsetWidth = cssWidth;\n        let offsetHeight = cssHeight;\n        let clientWidth = cssWidth;\n        let clientHeight = cssHeight;\n\n        const horizontalPadding = paddingLeft + paddingRight;\n        const verticalPadding = paddingTop + paddingBottom;\n        const horizontalBorder = borderLeft + borderRight;\n        const verticalBorder = borderTop + borderBottom;\n        const horizontalOffset = horizontalPadding + horizontalBorder;\n        const verticalOffset = verticalPadding + verticalBorder;\n\n        if (boxSizing) {\n            cssWidth = offsetWidth - horizontalOffset;\n            cssHeight = offsetHeight - verticalOffset;\n        } else {\n            offsetWidth = cssWidth + horizontalOffset;\n            offsetHeight = cssHeight + verticalOffset;\n        }\n        clientWidth = cssWidth + horizontalPadding;\n        clientHeight = cssHeight + verticalPadding;\n\n        return {\n            svg: false,\n            offsetWidth,\n            offsetHeight,\n            clientWidth,\n            clientHeight,\n            cssWidth,\n            cssHeight,\n        };\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function getTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!, false,\n        // state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n\n    if (el === document.body || el === document.documentElement) {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        const scrollPos = getBodyScrollPos();\n\n        [left, top] = [-scrollPos[0], -scrollPos[1]];\n    } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        right: left + width,\n        top,\n        bottom: top + height,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(moveable: any, e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector?: boolean): Array<HTMLElement | SVGElement | string | null>;\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, isSelector?: boolean) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        prev.push(getRefTarget(target, isSelector));\n        return prev;\n    }, [] as Array<SVGElement | HTMLElement | string | null | undefined>);\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * 2 * startOffsetWidth;\n            const startHeightSize = direction[1] * 2 * startOffsetHeight;\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                - getDistSize([startWidthSize, startHeightSize]);\n            const ratioRad = getRad([0, 0], [ratio, 1]);\n\n            distWidth = Math.cos(ratioRad) * distSize;\n            distHeight = Math.sin(ratioRad) * distSize;\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n        isPinch,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (isPinch) {\n        if (parentDistance) {\n            distWidth = parentDistance;\n            distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n        }\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = [0, 1].map(index => {\n            let directionRatio =  Math.abs(sizeDirection[index] - startFixedDirection[index]);\n\n            if (directionRatio !== 0) {\n                directionRatio = 2 / directionRatio;\n            }\n            return dist[index] * directionRatio;\n        });\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    getDirection, triggerEvent,\n    fillParams, getCSSSize,\n    fillEndParams, directionCondition,\n    getComputedStyle,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n        resizeFormat: Function,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onBeforeResize: \"beforeResize\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onBeforeResizeGroup: \"beforeResizeGroup\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n            parentFlag,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        const padding = [\n            Math.max(0, width - datas.startWidth),\n            Math.max(0, height - datas.startHeight),\n        ];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!parentFlag) {\n            const style = getComputedStyle(target);\n\n            const {\n                position,\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            } = style;\n            const isParentElement = position === \"static\" || position === \"relative\";\n            const container = isParentElement\n                ? target.parentElement\n                : (target as HTMLElement).offsetParent;\n\n            let containerWidth = width;\n            let containerHeight = height;\n\n            if (container) {\n                containerWidth = container!.clientWidth;\n                containerHeight = container!.clientHeight;\n\n                if (isParentElement) {\n                    const containerStyle = getComputedStyle(container!);\n\n                    containerWidth -= parseFloat(containerStyle.paddingLeft) || 0;\n                    containerHeight -= parseFloat(containerStyle.paddingTop) || 0;\n                }\n            }\n\n            datas.minSize = plus([\n                convertUnitSize(minWidth, containerWidth) || 0,\n                convertUnitSize(minHeight, containerHeight) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                convertUnitSize(maxWidth, containerWidth) || Infinity,\n                convertUnitSize(maxHeight, containerHeight) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n        setRatio(width / height);\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin: (minSize: Array<string | number>) => {\n                datas.minSize = [\n                    convertUnitSize(`${minSize[0]}`, 0) || 0,\n                    convertUnitSize(`${minSize[1]}`, 0) || 0,\n                ];\n            },\n            setMax: (maxSize: Array<string | number>) => {\n                const nextMaxSize = [\n                    maxSize[0] || Infinity,\n                    maxSize[1] || Infinity,\n                ];\n                if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                    nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n                }\n                if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                    nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n                }\n                datas.maxSize = nextMaxSize;\n            },\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            isWidth,\n            startOffsetWidth,\n            startOffsetHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n\n        const props = moveable.props;\n        const {\n            resizeFormat,\n            throttleResize = 1,\n            parentMoveable,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = sizeDirection[0] || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = sizeDirection[1] || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        datas.setFixedDirection(datas.fixedDirection);\n\n        triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                return [boundingWidth, boundingHeight];\n            },\n            boundingWidth,\n            boundingHeight,\n            setSize(size: number[]) {\n                [boundingWidth, boundingHeight] = size;\n            },\n        }, true));\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            ratio,\n        );\n        computeSize();\n\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            datas.fixedDirection,\n            fixedPosition,\n            transformOrigin,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    getDirection, triggerEvent, multiply2,\n    fillParams, fillEndParams, directionCondition, getAbsolutePosesByState, catchEvent, getOffsetSizeDist,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onBeforeScale: \"beforeScale\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onBeforeScaleGroup: \"beforeScaleGroup\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = (startOffsetWidth + distWidth) / startOffsetWidth;\n            let scaleY = (startOffsetHeight + distHeight) / startOffsetHeight;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses\n        = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n    const nextVerticalPoses\n        = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize,\n    getComputedStyle,\n    getSizeDistByDist,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/utils\";\n\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        keepRatio: Boolean,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, {...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n\n        const { keepRatio } = moveable.props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number, height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height, minRoundControls, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            horizontalCount += Math.abs(v.horizontal);\n            verticalCount += Math.abs(v.vertical);\n            const pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1]\n                : horizontalCount <= maxRoundControls[0];\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height, minRoundControls) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n        }\n        triggerEvent(moveable, \"onRoundEnd\",\n            fillEndParams<OnRoundEnd>(moveable, e, {}));\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const value = is3d ? `matrix3d(${createIdentityMatrix(4)}` : `matrix(${createIdentityMatrix(3)})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetTransform(e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist } from \"../utils\";\nimport Gesto from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isRequest) {\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    // cancel drag\n                    nextDatas.isEventStart = false;\n\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length === 0;\n    }\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        moveable.updateRect(isEnd ? eventType : \"\", true, false);\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || moveable.props.dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\");\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: IObject<any> = {\n        preventDefault: false,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport { cancelAnimationFrame, getKeys, IObject, removeEvent, requestAnimationFrame } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        ...getTargetInfo(null),\n    };\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                onClick={this.onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": hasFixed ? \"fixed\" : \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isUnmounted = false;\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n        }\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        this._emitter.off();\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n\n        if (targetGesto && !targetGesto.isFlag()) {\n            targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container,\n                // isTarget ? state : undefined\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable\n            ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public onPreventClick = (e: any) => {\n        e.stopPropagation();\n        removeEvent(window, \"click\", this.onPreventClick, true);\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            edge,\n            zoom,\n            hideDefaultLines,\n        } = props;\n\n        if (hideDefaultLines) {\n            return [];\n        }\n        const renderPoses = this.state.renderPoses;\n        const Renderer = {\n            createElement,\n        };\n        return [\n            renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom!, 0),\n            renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom!, 1),\n            renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom!, 2),\n            renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom!, 3),\n        ];\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#zoom\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n        const props = moveable.props;\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={props.cssStyled}\n                customStyledMap={props.customStyledMap}\n                useResizeObserver={props.useResizeObserver}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { addEvent, findIndex, removeEvent, requestAnimationFrame } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        if (!e.isRequest) {\n            addEvent(window, \"click\", moveable.onPreventClick, true);\n        }\n    },\n    dragControlStart(moveable: MoveableManagerInterface, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragStart(moveable, e);\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.endEvent(moveable);\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if (!e.isDrag || containsElement) {\n\n            this.unset(moveable);\n        }\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        this.endEvent(moveable);\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    endEvent(moveable: MoveableManagerInterface<ClickableProps>) {\n        requestAnimationFrame(() => {\n            this.unset(moveable);\n        });\n    },\n    unset(moveable: MoveableManagerInterface<ClickableProps>) {\n        removeEvent(window, \"click\", moveable.onPreventClick, true);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    dragControlCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus, rotate } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { throttle } from \"@daybrush/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1MinMax = [MIN_NUM, MAX_NUM];\n        const b2MinMax = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // b = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1MinMax[0] = Math.max(b1MinMax[0], b1);\n                b1MinMax[1] = Math.min(b1MinMax[1], b1);\n                b2MinMax[0] = Math.max(b2MinMax[0], b2);\n                b2MinMax[1] = Math.min(b2MinMax[1], b2);\n            });\n        });\n\n        b1MinMax.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2MinMax.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = left - info.left! + delta[0];\n        info.top = top - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.getElement().style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    protected _updateObserver() {}\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\n\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets} />;\n            }\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}  />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={elementTargets[0]} />;\n        }\n    }\n    public componentDidMount() {\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._updateRefs();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n            const nextTarget = nextRefTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"],"names":["makeAble","name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","result","gesto","move","inputEvent","datas","originalDatas","draggableDatas","draggable","convertDragDist","parentEvent","CustomGesto","prevX","prevY","startX","startY","isDrag","isFlag","dragStart","client","type","drag","clientX","clientY","distX","distY","deltaX","deltaY","parentGesto","fillChildEvents","moveable","groupable","groupableDatas","childDatas","moveables","_","i","triggerChildGesto","isStart","match","isEnd","childs","ev","childMoveable","childEvent","childGestos","parentFlag","child","triggerChildAbles","eachEvent","callback","renderDirectionControls","defaultDirections","React","additionalClassName","renderPoses","rotationRad","rotation","direction","_b","_c","renderDirections","directions","zoom","directionMap","sign","degRotation","PI","forEach","dir","indexes","directionRotation","throttle","className","prefix","key","style","getControlTransform","index","renderLine","pos1","pos2","classNames","_i","arguments","length","rad","getRad","getLineStyle","renderAllDirections","renderDiagonalDirections","setRotateStartInfo","origin","rect","is3d","nextOrigin","calculatePosition","rootMatrix","startAbsoluteOrigin","plus","left","top","prevDeg","defaultDeg","prevSnapDeg","loop","getAbsoluteDist","deg","normalizedPrevDeg","floor","dist","getAbsoluteDistByClient","getRotateInfo","moveableRect","startValue","isSnap","throttleRotate","nextDist","checkSnapRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","pos3","pos4","split","dir1","dir2","radPoses","pos","getRotationRad","isReverse","dragControlCondition","isRequest","requestAble","target","hasClass","rotationTarget","getRefTargets","some","element","contains","canPinch","rotatable","String","Number","Object","onRotateStart","onBeforeRotate","onRotate","onRotateEnd","onRotateGroupStart","onBeforeRotateGroup","onRotateGroup","onRotateGroupEnd","css","render","positions","jsxs","push","createElement","transform","apply","dragControlStart","parentRotate","beforeOrigin","beforeDirection","targetTransform","moveableClientRect","getRect","fixedPosition","getDirectionOffset","getOriginDirection","externalRotate","beforeInfo","afterInfo","absoluteInfo","setDefaultTransformIndex","params","fillParams","set","rotatation","fillTransformStartEvent","Draggable","triggerEvent","isRotate","snapRenderInfo","request","dragControl","groupDelta","resolveTransformEvent","targetDirection","getTransformDirection","parentMoveable","beforeDelta","beforeDist","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","parentDist","setRotation","nextRotation","nextTransform","convertTransformFormat","inverseDist","getRotateDist","inverseDelta","minus","prevInverseDist","requestValue","rotate","beforeRotate","absoluteRotate","fillTransformEvent","dragControlAfter","dragControlEnd","fillEndParams","dragGroupControlCondition","dragGroupControlStart","parentLeft","parentTop","parentBeforeOrigin","childClient","groupClient","nextParams","targets","dragGroupControl","catchEvent","rotateMatrix","setGroupRotation","dragGroupControlEnd","distRotate","getRotation","isControl","requestStart","deltaRotate","requestEnd","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","hasGuidelines","ableName","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","indexOf","getSnapDirections","snapDirections","right","bottom","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","splitSnapDirectionPoses","horizontalNames","filter","verticalNames","horizontal","vertical","getGapGuidelines","targetRect","snapThreshold","elementRects","gapGuidelines","mainNames","sideNames","targetStart","targetEnd","targetCenter","targetStart2","targetEnd2","getDist","elementRect","nextElementRects","sort","a","b","groups","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","gap","isCenter","abs","size","hide","gapRects","getDefaultGuidelines","width","height","clientLeft","clientTop","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetBottom","snapOffsetRight","snapWidth","snapHeight","calculateContainerPos","containerRect","clientPos","getSnapElementRects","values","containerClientRect","targetClientRect","containerLeft","containerTop","poses","getAbsolutePosesByState","getMinMaxs","targetLeft","minX","targetTop","minY","_d","calculateInversePosition","roundSign","distLeft","distTop","value","getBoundingClientRect","elementLeft","elementTop","elementRight","elementBottom","middle","getElementGuidelines","elementGuidelines","prevValues","snapRect","refresh","nextElementGuidelines","el","isObject","getRefTarget","diff","v","maintained","added","nextValues","prevIndex","nextIndex","elementSnapDirections","nextGuidelines","topValue","leftValue","rightValue","bottomValue","_e","centerValue","_f","middleValue","_g","rectTop","rectLeft","sizes","getTotalGuidelines","overflow","containerHeight","scrollHeight","containerWidth","scrollWidth","containerClientHeight","clientHeight","containerClientWidth","clientWidth","snapGap","totalGuidelines","__spreadArray","_h","getGridGuidelines","solveLineConstants","point1","point2","dx","dy","c","checkMoveableSnapPoses","posesX","posesY","customSnapThreshold","selectValue","checkSnapPoses","checkSnap","checkSnapKeepRatio","startPos","endPos","endX","endY","isBottom","isRight","getTinyDist","verticalInfo","offset","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","guideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","y","x","checkSnaps","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","nextPoses","getPosByDirection","alignPoses","keepRatio","getPosesByDirection","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","slice","aSign","bSign","aOffset","bOffset","getCheckSnapDirections","fixedDirection","endDirection_1","signX","signY","nextDirection","signs","isStartLine","dot","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","every","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","maxOffset","horizontalOffset","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","info","multiple","sizeOffset","getDragDist","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getInverseDragDist","getCheckSnapLineDirections","lineDirections","allMatrix","virtualPoses","calculatePoses","virtualLine","isBoundRotate","relativePoses","boundDots","getDistPointLine","sqrt","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","getDistSize","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","reduce","prev","cur","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","position","Infinity","nextBounds","checkBounds","getBounds","externalBounds","isCSS","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","min","maxPos","max","boundInfos","boundRect","boundRotate","vec","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","renderGuideline","isHorizontal","scaleType","renderInnerGuideline","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","isDisplayInnerSnapDigit","renderDigitLine","lineType","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","groupBy","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","getAbsolutePoses","absolutePoses","boundPoses","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isNaN","isWidthOutside","snapStart","container","snapContainer","snapContainerTarget","snapContainerRect","getClientRect","offset1","getDragDistByState","offset2","getNextFixedPoses","matrix","fixedPos","nextFixedPos","getSizeOffsetInfo","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","p","checkSnapResize","checkSnapScale","startOffsetWidth","startOffsetHeight","sizeDist","scaleMatrix","startCheckSnapDrag","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","findIndex","dragRelation","Array","Function","onSnap","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","pinchStart","unset","dragEnd","directionCondition","rotatableDragControlCondtion","dragGroupStart","dragGroup","dragGroupEnd","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","getComputedStyle","setDragStart","prevDist","prevBeforeDist","deltaOffset","translate","startRect","dragRotateRad","ry","cos","rx","sin","beforeTranslate","getBeforeDragDist","getTransformDist","throttleArray","passDelta","passDist","fillOriginalTransform","num","dragAfter","param","calculatePointerDist","posX","posY","beforeMatrix","offsetMatrix","targetMatrix","transformOrigin","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","startDragBeforeDist","calculate","startDragDist","calculateMoveablePosition","beforeTransform","event","functionName","beforeRenderable","transformIndex","nextTransforms","nextTransformAppendedIndexes","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","calculateTransformOrigin","prevWidth","prevHeight","prevOrigin","splitUnit","unit","prevSize","measureRatio","getPosIndexesByDirection","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","parseMat","convertDimension","createScaleMatrix","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","property","func","parse","functionValue","getNextTransformText","getTranslateDist","nextMatrix","groupLeft","groupTop","nextFixedPosition","getScaleDist","scaleDist","nextFixedOffset","rotateDist","getResizeDist","getAbsolutePosition","multiply2","prefixNames","getTransformMatrix","multiplies","createOriginMatrix","measureSVGSize","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","o","getElementTransform","computedStyle","computedTransform","list","baseVal","matrixes","chr","getOffsetInfo","lastParent","isParent","body","document","parentElement","tagName","isStatic","offsetParent","getOffsetPosInfo","offsetLeft","offsetTop","isSVG","isUndefined","hasOffset","targetOrigin","getSVGGraphicsOffset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","parseInt","marginTop","convert3DMatrixes","getBodyScrollPos","documentElement","scrollLeft","scrollTop","getPositionFixedInfo","fixedContainer","hasTransform","getMatrixStackInfo","checkContainer","targetTransformOrigin","hasFixed","offsetContainer","convertCSStoMatrix","isFixed","fixedInfo","offsetPos","getSVGMatrix","createIdentityMatrix","isOffsetEnd","offsetInfo","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","margin","calculateElementInfo","rootContainer","isAbsolute3d","allResult","getSize","offsetWidth","offsetHeight","calculateMatrixStack","getElementInfo","prevTargetMatrix","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","getSVGOffset","isMatrix3d","makeMatrixCSS","ignoreDimension","convertMatrixtoCSS","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","xAlign","yAlign","scaleDimension","getBBox","bbox","rectWidth","rectHeight","calculateRect","targetInfo","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","nextLeft","nextTop","y1","x2","y2","x3","y3","x4","y4","originX","originY","getShapeDirection","getDiagonalSize","getCSSSize","svg","cssWidth","cssHeight","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","getTargetInfo","moveableElement","parentContainer","resetClientRect","beforePosition","getOrigin","originalBeforeOrigin","isExtends","innerWidth","innerHeight","scrollPos","clientRect","getDirection","direciton","getAttribute","self","isBeforeEvent","currentTarget","isStartEvent","lastEvent","isDouble","_emitter","on","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","method","ableGroup","equals","a1","a2","arr","groupKeys","groupKey","keyIndex","group","groupByMap","flat","args","calculatePadding","convertCSSSize","isRelative","parentDirection","invertObject","obj","nextObj","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","isSelector","isString","querySelector","isFunction","current","userTargets","call","querySelectorAll","getElementTargets","selectorMap","elementTargets","getAbsoluteRotation","calculateMatrixDist","getSizeDistByDist","startSize","ratio","distWidth","distHeight","standardRad","signSize","startWidthSize","startHeightSize","distSize","ratioRad","getOffsetSizeDist","sizeDirection","parentDistance","parentScale","startFixedDirection","dist_1","directionRatio","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","ableEvent","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","resizable","throttleResize","resizeFormat","onResizeStart","onBeforeResize","onResize","onResizeEnd","onResizeGroupStart","onBeforeResizeGroup","onResizeGroup","onResizeGroupEnd","edge","startWidth","startHeight","padding","minSize","maxSize","minWidth","minHeight","isParentElement","containerStyle","convertUnitSize","isWidth","setRatio","isFinite","startPositions","setFixedDirection","setMin","setMax","nextMaxSize","isNumber","setOrigin","isResize","parentKeepRatio","dragClient","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","snapDist","computeSize","isNoSnap","calculateBoundSize","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalEvents","setDist","createRotateMatrix","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onBeforeScale","onScale","onScaleEnd","onScaleGroupStart","onBeforeScaleGroup","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","getNextScale","stateDirection","setScale","nextScale","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","controlPoses","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","sub","getRadiusValues","minCounts","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","swValue","_j","wnValue","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isRect","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getControlSize","xRange","yRange","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","getClipPath","defaultClip","customClip","clipText","clip","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","radiusPoses","_s","addClipPath","clipIndex","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadius","lineIndex","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","isDisplay","display","controlIndex","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","updateRect","requestAble_1","eventAbles","BeforeRenderable","Renderable","elementFromPoint","results","nextDatas","isEventStart","off","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","getTargetAbleGesto","moveableTarget","controlBox","getElement","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","options","Gesto","stop","EventManager","_onEvent","addEventListener","setAbles","destroy","removeEventListener","MoveableManager","_super","__extends","targetAbles","EventEmitter","_prevTarget","_prevDragArea","_observer","_observerId","onPreventClick","stopPropagation","removeEvent","checkUpdateRect","isDragging","cancelAnimationFrame","parentPosition","propsTarget","ControlBoxElement","cssStyled","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","renderAbles","_renderLines","componentDidMount","wrapperMoveable","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","componentWillUnmount","manager","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","updateTarget","statePos","getManager","isInstant","requsetAble","ableRequester","requester","ableParam","stateLeft","stateTop","stateContainer","updateAbles","isChanged","moveableContainer","unsetAbles","trigger","useCSS","tag","customStyleMap","customStyledMap","styled","always","nextState","setState","Renderer","ResizeObserver","disconnect","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","useDragArea","prevTarget","prevDragArea","isTargetChanged","isDragAreaChanged","eventKeys","getKeys","hasAbles","defaultProps","PureComponent","defaultGroupRotate","defaultGroupOrigin","refs","clickable","addEvent","endEvent","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1MinMax_1","b2MinMax_1","b1","b2","rotatePoses","changedWidth","MoveableGroup","differ","ChildrenDiffer","updateGroup","prototype","nextTarget","isContainerChanged","update","changed","removed","MoveableIndividualGroup","InitialMoveable","refTargets","makeStyled","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","userAbles","userProps","__rest","_updateRefs","isGroup","totalAbles","nextProps","prevRefTargets","nextRefTargets","isBrowser","nextSelectorMap","selectorTarget","__decorate","withMethods","Moveable","makeMoveable"],"mappings":"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"}